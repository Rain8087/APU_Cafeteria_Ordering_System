/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Apu_cafeteria_ordering_system;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author jorda
 */
public class Registration extends javax.swing.JFrame {

    /**
     * Creates new form RegisterCustomer
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        canvas1 = new java.awt.Canvas();
        lblRegister = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblContNum = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtDOB = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtContNum = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        cmbGender = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblRegister.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        lblRegister.setText("Register Customer");

        txtName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        lblName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblName.setText("Name: ");

        lblGender.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblGender.setText("Gender: ");

        lblDOB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblDOB.setText("Date of birth: ");

        lblContNum.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblContNum.setText("Contact Number: ");

        lblAddress.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblAddress.setText("Address: ");

        lblEmail.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblEmail.setText("Email: ");

        lblPassword.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblPassword.setText("Password: ");

        txtDOB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtAddress.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtContNum.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        txtPass.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        btnBack.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRegister.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        cmbGender.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose gender", "Male", "Female" }));
        cmbGender.setPreferredSize(new java.awt.Dimension(64, 29));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRegister, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                        .addGap(162, 162, 162))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblName)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblContNum)
                                        .addComponent(lblAddress, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(lblGender)
                                    .addComponent(lblDOB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(txtDOB, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(txtPass, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(txtContNum, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(cmbGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegister)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOB)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContNum)
                    .addComponent(txtContNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnRegister))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int ln;
    
    //Count totalline in file
    void countLines(){
        try {
            //Read file
            BufferedReader br = new BufferedReader(new FileReader("User.txt"));
            //Count line
            for(int i=0;br.readLine()!=null;i++){
                ln++;
            }
            //Close file
            br.close();
        }
        //Exception handeling
        catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Countline filenotfound");
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Countline ioexp");
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    void addData(String email,String pass,String gen,String DOB,String name,String Con,String Address){
        try {
            //Open writter
            FileWriter fw = new FileWriter("User.txt",true);
            //Write data into writter
            fw.write("\n"+email+","+pass+",Customer"+","+gen+","+DOB+","+name+","+Con+","+Address);
            //Close writter
            fw.close();
        } 
        //Exception handeling
        catch (FileNotFoundException ex){
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex){
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Customer successfully registered", "PopUp Dialog", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        //CAll same class method countLines
        countLines();
        int flg = 0;
        try{
            //Read file
            BufferedReader br = new BufferedReader(new FileReader("User.txt"));
            //Check if all field is filled
            if(txtName.getText().length()!=0&&cmbGender.getSelectedItem().toString()!="Choose gender"&&txtDOB.getText().length()!=0&&txtContNum.getText().length()!=0&&txtAddress.getText().length()!=0&&txtEmail.getText().length()!=0&&txtPass.getText().length()!=0){
                for(int i=0;i<ln;i++){
                    //Read line from file
                    String line = br.readLine();
                    if(line == null){
                        
                    }
                    //Check if entered email already occupied
                    else if(txtEmail.getText().equals(line.split(",")[0])){
                        flg = 1;
                        break;
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "Please fill in all information.", "PopUp Dialog", JOptionPane.INFORMATION_MESSAGE);
            } 
            if(flg == 0){
                try{
                    //Checking if user enter correct data type
                    Integer.parseInt(txtContNum.getText());
                    Date.parse(txtDOB.getText());
                    //Sending data to same class method, addData
                    addData(txtEmail.getText().trim(),txtPass.getText().trim(),cmbGender.getSelectedItem().toString().trim(),txtDOB.getText().trim(),txtName.getText().trim(),txtContNum.getText().trim(),txtAddress.getText().trim());
                    //Clear text field and set combobox to default
                    txtName.setText("");
                    cmbGender.setSelectedIndex(0);
                    txtDOB.setText("");
                    txtContNum.setText("");
                    txtAddress.setText("");
                    txtEmail.setText("");
                    txtPass.setText("");
                }
                //Exception handeling
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Invalid input for date of birth/contact number", "PopUp Dialog", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            else if(flg == 1){
                JOptionPane.showMessageDialog(null, "Email occupied");
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private java.awt.Canvas canvas1;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContNum;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRegister;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContNum;
    private javax.swing.JTextField txtDOB;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPass;
    // End of variables declaration//GEN-END:variables
}
